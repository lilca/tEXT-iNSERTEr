#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <dirent.h>

void create_makefile(const char *dir_path, const char *cfg) {
    FILE *makefile;  // メイクファイルへのポインタ
    char makefile_path[1024]; // メイクファイルのパス
    // 対象ディレクトリ直下のメイクファイルパスを作る
    snprintf(makefile_path, sizeof(makefile_path), "%s/Makefile", dir_path);
    
    // メイクファイルをオープン(書込)
    makefile = fopen(makefile_path, "w");
    if (makefile == NULL) {
        // 失敗したら終了
        perror("Error opening file");
        exit(EXIT_FAILURE);
    }

    // メイクファイルに出力
    fprintf(makefile, "all: ");

ここから

    DIR *dir;
    struct dirent *entry;
    char file_path[1024];

    if ((dir = opendir(dir_path)) != NULL) {
        while ((entry = readdir(dir)) != NULL) {
            if (strstr(entry->d_name, ".tir") != NULL) {
                snprintf(file_path, sizeof(file_path), "%s/%s", dir_path, entry->d_name);
                fprintf(makefile, "%s ", entry->d_name);
            }
        }
        closedir(dir);
    } else {
        perror("Could not open directory");
        exit(EXIT_FAILURE);
    }

    fprintf(makefile, "\n\n");

    if ((dir = opendir(dir_path)) != NULL) {
        while ((entry = readdir(dir)) != NULL) {
            if (strstr(entry->d_name, ".tir") != NULL) {
                snprintf(file_path, sizeof(file_path), "%s/%s", dir_path, entry->d_name);
                fprintf(makefile, "tir %s -makefile -y -cfg %s/%s\n", file_path, dir_path, cfg);
            }
        }
        closedir(dir);
    } else {
        perror("Could not open directory");
        exit(EXIT_FAILURE);
    }

    fclose(makefile);
}

int main(int argc, char argv[][]) {
    // パラメータが ２未満はヘルプを表示して終了
    if (argc < 2) {
        printf("tirc (tEXT-iNSERTEr)\n");
        printf("  version  :  0.1.1\n");
        printf("  github   :  https://github.com/lilca/tEXT-iNSERTEr\n");
        printf("Usage:\n");
        printf("  tirc <target directory>\n");
        return 0;
    }

    // 対象ディレクトリ
    const char *tar = argv[1];
    // デフォルトのコンフィグファイルのパス
    const char *cfg = "tir.cfg";
    // メイクファイル作成
    create_makefile(tar, cfg);
    // 正常終了
    return 0;
}